buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    maven {
        // JEI
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
}

// Convention: MCVERSION.MAJORMOD.MAJORAPI.MINOR.PATCH
// See: http://mcforge.readthedocs.io/en/latest/conventions/versioning/
// MCVERSION
  // Always matches the Minecraft version the mod is for.
// MAJORMOD
  // Removing items, blocks, tile entities, etc.
  // Changing or removing previously existing mechanics.
  // Updating to a new Minecraft version.
// MAJORAPI
  // Changing the order or variables of enums.
  // Changing return types of methods.
  // Removing public methods altogether.
// MINOR
  // Adding items, blocks, tile entities, etc.
  // Adding new mechanics.
  // Deprecating public methods. (This is not a MAJOR-API increment since it doesnâ€™t break an API.)
// PATCH
  // Bugfixes.
version = "1.9-1.3.0.0"
group = "com.voxmods.shieldrework"
archivesBaseName = "shieldrework"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.9-12.16.1.1887"
    runDir = "run"

    mappings = "snapshot_20160312"

    replaceIn "util/Constants.java"
    replace "@VERSION@", project.version
    replace "@MCVERSION@", project.minecraft.version

    useDepAts = true
}

dependencies {
    deobfCompile "mezz.jei:jei_1.9:3.3.3.+"
    deobfCompile "slimeknights:TConstruct:1.9-2.3.0.jenkins193"
}

processResources
        {
            // This will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // Replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // Replace version and mcversion
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            // Copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

idea { module { inheritOutputDirs = true } }